package DoublyList;

public class DoublyList {

	static class Node {
		private int data; // created multiple times per node
		private Node prev;
		private Node next;

		public Node() {
			data = 0;
			prev = null;
			next = null;
		}

		public Node(int val) {
			data = val;
			prev = null;
			next = null;
		}
	}// end of node class

	private Node head; // Inside doubly list only created once per list

	public DoublyList() {
		head = null;
	}
	// methods

	public void addFirst(int val) {
		Node newNode = new Node(val);

		if (head == null) {
			head = newNode;
			return;
		}
		newNode.next = head;
		head.prev = newNode;
		head = newNode;

	}

	public void addLast(int val) {
		Node newNode = new Node(val);
		Node trav = head;
		if (head == null) {
			addFirst(val);
			return;
		}

		while (trav.next != null) {
			trav = trav.next;
		}
		trav.next = newNode;
		newNode.prev = trav;

	}

	public void displayForward() {
		Node trav = head;
		
		while (trav != null) {
			System.out.print(trav.data+" ");
			trav = trav.next;
		}
	}
	public void displayReverse(Node trav)
	{
		if(trav == null)
			return;
		
		System.out.println( trav.data+" ");
		displayReverse(trav.next);
		
	}
	public void displayReverse()
	{
		displayReverse(head);
	}
}
